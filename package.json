{
	"name": "starter",
	"version": "4.1.0",
	"description": "Starter template for Pudding stories",
	"author": "Russell Goldenberg",
	"license": "MIT",
	"engines": {
		"node": ">=8.0.0"
	},
	"dependencies": {
		"archieml": "^0.4.2",
		"babel-core": "^6.26.3",
		"babel-loader": "^7.1.4",
		"babel-plugin-transform-object-rest-spread": "^6.26.0",
		"babel-preset-env": "^1.7.0",
		"babel-preset-es2015": "^6.24.1",
		"babel-preset-stage-1": "^6.24.1",
		"babel-register": "^6.26.0",
		"browser-sync": "^2.24.5",
		"cli-error-notifier": "2.1.0",
		"d3-jetpack": "^2.0.20",
		"d3-svg-annotation": "2.3.0",
		"del": "^3.0.0",
		"eslint": "^5.0.1",
		"eslint-config-airbnb-base": "^13.0.0",
		"eslint-config-prettier": "^2.9.0",
		"eslint-plugin-import": "^2.13.0",
		"eslint-plugin-prettier": "^2.6.1",
		"fontfaceobserver": "^2.0.13",
		"gulp": "^3.9.1",
		"gulp-autoprefixer": "^5.0.0",
		"gulp-clean-css": "^3.9.4",
		"gulp-combine-mq": "^0.4.0",
		"gulp-file-include": "^2.0.1",
		"gulp-hb": "^7.0.1",
		"gulp-htmlmin": "^4.0.0",
		"gulp-notify": "^3.2.0",
		"gulp-plumber": "^1.2.0",
		"gulp-rename": "^1.3.0",
		"gulp-replace": "^1.0.0",
		"gulp-smoosher": "^0.0.9",
		"gulp-sourcemaps": "^2.6.4",
		"gulp-stylus": "^2.7.0",
		"gulp-util": "^3.0.7",
		"intersection-observer": "0.5.0",
		"lodash.debounce": "^4.0.8",
		"lodash.uniqby": "4.7.0",
		"nouislider": "14.0.2",
		"prettier": "^1.13.7",
		"promise-polyfill": "^8.0.0",
		"request": "^2.87.0",
		"require-dir": "^1.0.0",
		"rimraf": "2.6.3",
		"run-sequence": "^2.2.0",
		"scrollama": "^1.4.3",
		"source-map": "^0.7.3",
		"stickyfilljs": "^2.0.5",
		"superagent": "5.1.0",
		"uglifyjs-webpack-plugin": "1.2.7",
		"webpack": "^4.14.0",
		"webpack-stream": "^4.0.3"
	},
	"devDependencies": {
		"archieml": "0.4.2",
		"autoprefixer-stylus": "0.14.0",
		"babel-eslint": "10.0.2",
		"d3-dsv": "1.1.1",
		"eslint": "6.0.1",
		"eslint-config-airbnb-base": "13.1.0",
		"eslint-config-prettier": "6.0.0",
		"eslint-plugin-import": "2.18.0",
		"eslint-plugin-prettier": "3.1.0",
		"gulp": "^4.0.2",
		"handlebars": "4.7.7",
		"imagemin": "7.0.0",
		"imagemin-mozjpeg": "8.0.0",
		"imagemin-pngquant": "8.0.0",
		"inline-source": "6.2.0",
		"light-server": "2.6.2",
		"npm-run-all": "4.1.5",
		"onchange": "6.0.0",
		"parcel-bundler": "1.12.3",
		"prettier": "1.18.2",
		"promise-polyfill": "8.1.3",
		"replace-in-file": "4.1.0",
		"request": "2.88.0",
		"stylus": "0.54.5",
		"whatwg-fetch": "3.0.0"
	},
	"main": "scripts/main.js",
	"scripts": {
		"depudding": "node ./scripts/depudding.js",
		"doc": "node ./scripts/fetch-doc.js",
		"sheet": "node ./scripts/fetch-sheet.js",
		"build": "run-s build:assets build:css build:js build:html",
		"prebuild": "rm -rf .tmp .cache dev && mkdir .tmp .cache dev",
		"build:assets": "cp -r src/assets dev",
		"build:css": "onerror \"stylus src/css/config.styl -u autoprefixer-stylus -o dev/bundle.css -m\"  -t \"Build Error in CSS\" -m \"See terminal for details\" -s Basso",
		"build:js": "onerror \"parcel build src/js/main.js src/js/head.js --out-dir dev --no-minify\"  -t \"Build Error in JS\" -m \"See terminal for details\" -s Basso",
		"build:html": "onerror \"node ./scripts/html.js\" -t \"Build Error in HTML\" -m \"See terminal for details\" -s Basso",
		"deploy": "NODE_ENV=dist run-s deploy:*",
		"predeploy": "rm -rf .tmp .cache dist && mkdir .tmp .cache dist",
		"deploy:assets": "cp -r src/assets dist && node ./scripts/image-min.js",
		"deploy:css": "stylus src/css/config.styl -u autoprefixer-stylus -o dist/bundle.css -c",
		"deploy:js": "parcel build src/js/main.js src/js/head.js --out-dir dist --no-source-maps",
		"deploy:html": "node ./scripts/html.js",
		"watch:assets": "onchange -k 'src/assets/**/*' -- run-s build:assets",
		"watch:css": "stylus src/css/config.styl -u autoprefixer-stylus -o dev/bundle.css -m -w",
		"watch:js": "parcel watch src/js/main.js src/js/head.js --out-dir dev --no-hmr",
		"watch:html": "onchange 'src/html/**/*' 'data/*/' -- run-s build:html",
		"serve": "light-server -q -o -s dev -p 4000 -w 'dev/*.css # # reloadcss' -w 'dev/*.js # #' -w 'dev/*.html # #' -w 'dev/assets/**/* # #'",
		"dev": "run-p serve watch:*",
		"start": "NODE_ENV=dev run-s build dev"
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/polygraph-cool/starter.git"
	},
	"keywords": [
		"pudding",
		"starter",
		"template"
	],
	"bugs": {
		"url": "https://github.com/polygraph-cool/starter/issues"
	},
	"homepage": "https://github.com/polygraph-cool/starter#readme"
}
